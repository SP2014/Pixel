// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext{
        kotlin_version = "1.4.21"
        hilt_version = '2.30.1-alpha'
        args_version = '2.3.2'

        def retrofit_gson_version = '2.6.2'
        def retrofit_version = '2.6.2'
        def room_version = '2.2.1'
        def truth_version = '1.0'
        def work_version = '2.2.0'
        def coroutines_android_version = '1.3.6'
        def expresso_version = '3.2.0'
        def glide_version = '4.10.0'
        def gson_version = '2.8.6'
        def junit_version = '4.12'
        def moshi_version = '1.11.0'
        def lifecycle_version = '2.1.0'
        def livedata_version = '2.2.0-rc02'
        def annotations_version = '1.1.0'
        def hilt_viewmodel_version = '1.0.0-alpha02'
        def navigation_version = "2.3.2"
        def photoview_version = "2.3.0"

        libraries = [

                // Coroutines
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android_version",

                // Android UI and appcompat
                //"androidx.appcompat:appcompat:$appcompat_version",
                //"com.google.android.material:material:$material_version",
                //"androidx.constraintlayout:constraintlayout:$constraint_layout_version",
                "androidx.navigation:navigation-fragment-ktx:$navigation_version",
                "androidx.navigation:navigation-ui-ktx:$navigation_version",
                "androidx.legacy:legacy-support-v4:1.0.0",

                "androidx.fragment:fragment-ktx:1.1.0",

                // Glide
                "com.github.bumptech.glide:glide:$glide_version",

                // ViewModel and LiveData
                "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
                "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version",
                "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",

                // network & serialization
                "com.google.code.gson:gson:$gson_version",
                "com.squareup.retrofit2:converter-gson:$retrofit_gson_version",
                "com.squareup.retrofit2:retrofit:$retrofit_version",

                // threading
                "androidx.annotation:annotation:$annotations_version",

                "com.squareup.moshi:moshi-kotlin:$moshi_version",

                "com.squareup.moshi:moshi-adapters:$moshi_version",

                "com.squareup.retrofit2:converter-moshi:2.9.0",

                "com.squareup.picasso:picasso:2.71828",

                "com.google.dagger:hilt-android:$hilt_version",

                "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodel_version",

                "com.github.chrisbanes:PhotoView:$photoview_version"
        ]

        arch_libraries = [
                "androidx.work:work-runtime-ktx:$work_version",

                // Room for database
                "androidx.room:room-ktx:$room_version"
        ]

        librariesKapt = [
                "androidx.room:room-compiler:$room_version",
                "com.github.bumptech.glide:compiler:$glide_version",
                "com.google.dagger:hilt-android-compiler:$hilt_version",
                "androidx.hilt:hilt-compiler:$hilt_viewmodel_version"
        ]
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$args_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}